// Code generated by MockGen. DO NOT EDIT.
// Source: registry.go

// Package kafka is a generated GoMock package.
package kafka

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSchemaResolver is a mock of SchemaResolver interface
type MockSchemaResolver struct {
	ctrl     *gomock.Controller
	recorder *MockSchemaResolverMockRecorder
}

// MockSchemaResolverMockRecorder is the mock recorder for MockSchemaResolver
type MockSchemaResolverMockRecorder struct {
	mock *MockSchemaResolver
}

// NewMockSchemaResolver creates a new mock instance
func NewMockSchemaResolver(ctrl *gomock.Controller) *MockSchemaResolver {
	mock := &MockSchemaResolver{ctrl: ctrl}
	mock.recorder = &MockSchemaResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSchemaResolver) EXPECT() *MockSchemaResolverMockRecorder {
	return m.recorder
}

// GetSchemaBySubject mocks base method
func (m *MockSchemaResolver) GetSchemaBySubject(subject string, version int) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSchemaBySubject", subject, version)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSchemaBySubject indicates an expected call of GetSchemaBySubject
func (mr *MockSchemaResolverMockRecorder) GetSchemaBySubject(subject, version interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSchemaBySubject", reflect.TypeOf((*MockSchemaResolver)(nil).GetSchemaBySubject), subject, version)
}

// RegisterNewSchema mocks base method
func (m *MockSchemaResolver) RegisterNewSchema(subject, content string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterNewSchema", subject, content)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RegisterNewSchema indicates an expected call of RegisterNewSchema
func (mr *MockSchemaResolverMockRecorder) RegisterNewSchema(subject, content interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterNewSchema", reflect.TypeOf((*MockSchemaResolver)(nil).RegisterNewSchema), subject, content)
}
